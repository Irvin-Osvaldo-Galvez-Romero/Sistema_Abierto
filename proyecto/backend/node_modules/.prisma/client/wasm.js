
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  nombre: 'nombre',
  apellidoPaterno: 'apellidoPaterno',
  apellidoMaterno: 'apellidoMaterno',
  telefono: 'telefono',
  rol: 'rol',
  activo: 'activo',
  emailVerificado: 'emailVerificado',
  primerLogin: 'primerLogin',
  intentosFallidos: 'intentosFallidos',
  bloqueadoHasta: 'bloqueadoHasta',
  ultimoAcceso: 'ultimoAcceso',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TokenSesionScalarFieldEnum = {
  id: 'id',
  token: 'token',
  tipo: 'tipo',
  expiraEn: 'expiraEn',
  revocado: 'revocado',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt'
};

exports.Prisma.EstudianteScalarFieldEnum = {
  id: 'id',
  matricula: 'matricula',
  fechaNacimiento: 'fechaNacimiento',
  curp: 'curp',
  nss: 'nss',
  direccion: 'direccion',
  ciudad: 'ciudad',
  estado: 'estado',
  codigoPostal: 'codigoPostal',
  tutorNombre: 'tutorNombre',
  tutorTelefono: 'tutorTelefono',
  tutorEmail: 'tutorEmail',
  estatus: 'estatus',
  fechaIngreso: 'fechaIngreso',
  fechaEgreso: 'fechaEgreso',
  usuarioId: 'usuarioId',
  carreraId: 'carreraId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CarreraScalarFieldEnum = {
  id: 'id',
  clave: 'clave',
  nombre: 'nombre',
  descripcion: 'descripcion',
  duracionSemestres: 'duracionSemestres',
  creditos: 'creditos',
  modalidad: 'modalidad',
  activo: 'activo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MateriaScalarFieldEnum = {
  id: 'id',
  clave: 'clave',
  nombre: 'nombre',
  descripcion: 'descripcion',
  creditos: 'creditos',
  semestre: 'semestre',
  horasTeoria: 'horasTeoria',
  horasPractica: 'horasPractica',
  activo: 'activo',
  carreraId: 'carreraId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GrupoScalarFieldEnum = {
  id: 'id',
  clave: 'clave',
  periodo: 'periodo',
  cupoMaximo: 'cupoMaximo',
  cupoDisponible: 'cupoDisponible',
  horario: 'horario',
  aula: 'aula',
  activo: 'activo',
  materiaId: 'materiaId',
  profesorId: 'profesorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InscripcionScalarFieldEnum = {
  id: 'id',
  periodo: 'periodo',
  estatus: 'estatus',
  fechaInscripcion: 'fechaInscripcion',
  estudianteId: 'estudianteId',
  grupoId: 'grupoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CalificacionScalarFieldEnum = {
  id: 'id',
  calificacion: 'calificacion',
  estatus: 'estatus',
  observaciones: 'observaciones',
  estudianteId: 'estudianteId',
  materiaId: 'materiaId',
  inscripcionId: 'inscripcionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfesorScalarFieldEnum = {
  id: 'id',
  numeroEmpleado: 'numeroEmpleado',
  especialidad: 'especialidad',
  grado: 'grado',
  departamento: 'departamento',
  activo: 'activo',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AdministradorScalarFieldEnum = {
  id: 'id',
  numeroEmpleado: 'numeroEmpleado',
  area: 'area',
  cargo: 'cargo',
  activo: 'activo',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentoScalarFieldEnum = {
  id: 'id',
  folio: 'folio',
  tipo: 'tipo',
  titulo: 'titulo',
  descripcion: 'descripcion',
  rutaArchivo: 'rutaArchivo',
  rutaArchivoFirmado: 'rutaArchivoFirmado',
  hashArchivo: 'hashArchivo',
  tamanoBytes: 'tamanoBytes',
  mimeType: 'mimeType',
  estatus: 'estatus',
  fechaEmision: 'fechaEmision',
  fechaVencimiento: 'fechaVencimiento',
  validado: 'validado',
  firmado: 'firmado',
  cadenaBlockchain: 'cadenaBlockchain',
  qrCode: 'qrCode',
  creadoPorId: 'creadoPorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentoEstudianteScalarFieldEnum = {
  id: 'id',
  observaciones: 'observaciones',
  motivoRechazo: 'motivoRechazo',
  revisadoPor: 'revisadoPor',
  fechaRevision: 'fechaRevision',
  escaneoVirus: 'escaneoVirus',
  virusDetectado: 'virusDetectado',
  nombreVirusDetectado: 'nombreVirusDetectado',
  documentoId: 'documentoId',
  estudianteId: 'estudianteId',
  createdAt: 'createdAt'
};

exports.Prisma.NotificacionScalarFieldEnum = {
  id: 'id',
  tipo: 'tipo',
  titulo: 'titulo',
  mensaje: 'mensaje',
  leida: 'leida',
  documentoId: 'documentoId',
  estudianteId: 'estudianteId',
  createdAt: 'createdAt'
};

exports.Prisma.ActividadUsuarioScalarFieldEnum = {
  id: 'id',
  accion: 'accion',
  entidad: 'entidad',
  entidadId: 'entidadId',
  descripcion: 'descripcion',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Rol = exports.$Enums.Rol = {
  SUPER_ADMIN: 'SUPER_ADMIN',
  ADMINISTRADOR: 'ADMINISTRADOR',
  PROFESOR: 'PROFESOR',
  ESTUDIANTE: 'ESTUDIANTE',
  PERSONAL_ADMINISTRATIVO: 'PERSONAL_ADMINISTRATIVO'
};

exports.TipoToken = exports.$Enums.TipoToken = {
  ACCESS: 'ACCESS',
  REFRESH: 'REFRESH',
  RESET_PASSWORD: 'RESET_PASSWORD',
  VERIFY_EMAIL: 'VERIFY_EMAIL'
};

exports.EstatusEstudiante = exports.$Enums.EstatusEstudiante = {
  ACTIVO: 'ACTIVO',
  INACTIVO: 'INACTIVO',
  EGRESADO: 'EGRESADO',
  BAJA_TEMPORAL: 'BAJA_TEMPORAL',
  BAJA_DEFINITIVA: 'BAJA_DEFINITIVA'
};

exports.Modalidad = exports.$Enums.Modalidad = {
  PRESENCIAL: 'PRESENCIAL',
  EN_LINEA: 'EN_LINEA',
  MIXTA: 'MIXTA'
};

exports.EstatusInscripcion = exports.$Enums.EstatusInscripcion = {
  INSCRITO: 'INSCRITO',
  CURSANDO: 'CURSANDO',
  APROBADO: 'APROBADO',
  REPROBADO: 'REPROBADO',
  BAJA: 'BAJA'
};

exports.TipoDocumento = exports.$Enums.TipoDocumento = {
  KARDEX: 'KARDEX',
  FICHA_REINSCRIPCION: 'FICHA_REINSCRIPCION',
  COMPROBANTE_PAGO: 'COMPROBANTE_PAGO'
};

exports.EstatusDocumento = exports.$Enums.EstatusDocumento = {
  PENDIENTE: 'PENDIENTE',
  EN_REVISION: 'EN_REVISION',
  APROBADO: 'APROBADO',
  RECHAZADO: 'RECHAZADO',
  VENCIDO: 'VENCIDO',
  ANULADO: 'ANULADO'
};

exports.TipoNotificacion = exports.$Enums.TipoNotificacion = {
  DOCUMENTO_APROBADO: 'DOCUMENTO_APROBADO',
  DOCUMENTO_RECHAZADO: 'DOCUMENTO_RECHAZADO',
  DOCUMENTO_PENDIENTE: 'DOCUMENTO_PENDIENTE',
  GENERAL: 'GENERAL'
};

exports.Prisma.ModelName = {
  Usuario: 'Usuario',
  TokenSesion: 'TokenSesion',
  Estudiante: 'Estudiante',
  Carrera: 'Carrera',
  Materia: 'Materia',
  Grupo: 'Grupo',
  Inscripcion: 'Inscripcion',
  Calificacion: 'Calificacion',
  Profesor: 'Profesor',
  Administrador: 'Administrador',
  Documento: 'Documento',
  DocumentoEstudiante: 'DocumentoEstudiante',
  Notificacion: 'Notificacion',
  ActividadUsuario: 'ActividadUsuario'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\User\\Documents\\GitHub\\Sistema_Abierto\\proyecto\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\User\\Documents\\GitHub\\Sistema_Abierto\\proyecto\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// ==========================================\n// Esquema de Base de Datos - Prisma ORM\n// Sistema Universitario de Gestión Documental\n// ==========================================\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\n// ==========================================\n// MODELOS DE AUTENTICACIÓN Y USUARIOS\n// ==========================================\n\nmodel Usuario {\n  id               String    @id @default(uuid())\n  email            String    @unique\n  password         String\n  nombre           String\n  apellidoPaterno  String\n  apellidoMaterno  String?\n  telefono         String?\n  rol              Rol       @default(ESTUDIANTE)\n  activo           Boolean   @default(true)\n  emailVerificado  Boolean   @default(false)\n  primerLogin      Boolean   @default(true)\n  intentosFallidos Int       @default(0)\n  bloqueadoHasta   DateTime?\n  ultimoAcceso     DateTime?\n  createdAt        DateTime  @default(now())\n  updatedAt        DateTime  @updatedAt\n\n  // Relaciones\n  estudiante        Estudiante?\n  profesor          Profesor?\n  administrador     Administrador?\n  tokens            TokenSesion[]\n  actividades       ActividadUsuario[]\n  documentosCreados Documento[]        @relation(\"DocumentoCreador\")\n\n  @@map(\"usuarios\")\n}\n\nenum Rol {\n  SUPER_ADMIN\n  ADMINISTRADOR\n  PROFESOR\n  ESTUDIANTE\n  PERSONAL_ADMINISTRATIVO\n}\n\nmodel TokenSesion {\n  id        String    @id @default(uuid())\n  token     String    @unique\n  tipo      TipoToken\n  expiraEn  DateTime\n  revocado  Boolean   @default(false)\n  ipAddress String?\n  userAgent String?\n\n  usuarioId String\n  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n\n  @@map(\"tokens_sesion\")\n}\n\nenum TipoToken {\n  ACCESS\n  REFRESH\n  RESET_PASSWORD\n  VERIFY_EMAIL\n}\n\n// ==========================================\n// MODELOS DE ESTUDIANTES\n// ==========================================\n\nmodel Estudiante {\n  id              String            @id @default(uuid())\n  matricula       String            @unique\n  fechaNacimiento DateTime?\n  curp            String?           @unique\n  nss             String?\n  direccion       String?\n  ciudad          String?\n  estado          String?\n  codigoPostal    String?\n  tutorNombre     String?\n  tutorTelefono   String?\n  tutorEmail      String?\n  estatus         EstatusEstudiante @default(ACTIVO)\n  fechaIngreso    DateTime          @default(now())\n  fechaEgreso     DateTime?\n\n  usuarioId String  @unique\n  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)\n\n  carreraId String?\n  carrera   Carrera? @relation(fields: [carreraId], references: [id])\n\n  // Relaciones\n  inscripciones  Inscripcion[]\n  calificaciones Calificacion[]\n  documentos     DocumentoEstudiante[]\n  notificaciones Notificacion[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"estudiantes\")\n}\n\nenum EstatusEstudiante {\n  ACTIVO\n  INACTIVO\n  EGRESADO\n  BAJA_TEMPORAL\n  BAJA_DEFINITIVA\n}\n\n// ==========================================\n// MODELOS ACADÉMICOS\n// ==========================================\n\nmodel Carrera {\n  id                String    @id @default(uuid())\n  clave             String    @unique\n  nombre            String\n  descripcion       String?\n  duracionSemestres Int\n  creditos          Int\n  modalidad         Modalidad\n  activo            Boolean   @default(true)\n\n  // Relaciones\n  estudiantes Estudiante[]\n  materias    Materia[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"carreras\")\n}\n\nenum Modalidad {\n  PRESENCIAL\n  EN_LINEA\n  MIXTA\n}\n\nmodel Materia {\n  id            String  @id @default(uuid())\n  clave         String  @unique\n  nombre        String\n  descripcion   String?\n  creditos      Int\n  semestre      Int\n  horasTeoria   Int\n  horasPractica Int\n  activo        Boolean @default(true)\n\n  carreraId String\n  carrera   Carrera @relation(fields: [carreraId], references: [id])\n\n  // Relaciones\n  grupos         Grupo[]\n  calificaciones Calificacion[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"materias\")\n}\n\nmodel Grupo {\n  id             String  @id @default(uuid())\n  clave          String  @unique\n  periodo        String\n  cupoMaximo     Int\n  cupoDisponible Int\n  horario        String\n  aula           String?\n  activo         Boolean @default(true)\n\n  materiaId String\n  materia   Materia @relation(fields: [materiaId], references: [id])\n\n  profesorId String\n  profesor   Profesor @relation(fields: [profesorId], references: [id])\n\n  // Relaciones\n  inscripciones Inscripcion[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"grupos\")\n}\n\nmodel Inscripcion {\n  id               String             @id @default(uuid())\n  periodo          String\n  estatus          EstatusInscripcion @default(INSCRITO)\n  fechaInscripcion DateTime           @default(now())\n\n  estudianteId String\n  estudiante   Estudiante @relation(fields: [estudianteId], references: [id], onDelete: Cascade)\n\n  grupoId String\n  grupo   Grupo  @relation(fields: [grupoId], references: [id])\n\n  // Relaciones\n  calificacion Calificacion?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([estudianteId, grupoId, periodo])\n  @@map(\"inscripciones\")\n}\n\nenum EstatusInscripcion {\n  INSCRITO\n  CURSANDO\n  APROBADO\n  REPROBADO\n  BAJA\n}\n\nmodel Calificacion {\n  id            String  @id @default(uuid())\n  calificacion  Float\n  estatus       String\n  observaciones String?\n\n  estudianteId String\n  estudiante   Estudiante @relation(fields: [estudianteId], references: [id], onDelete: Cascade)\n\n  materiaId String\n  materia   Materia @relation(fields: [materiaId], references: [id])\n\n  inscripcionId String      @unique\n  inscripcion   Inscripcion @relation(fields: [inscripcionId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"calificaciones\")\n}\n\n// ==========================================\n// MODELOS DE PROFESORES Y PERSONAL\n// ==========================================\n\nmodel Profesor {\n  id             String  @id @default(uuid())\n  numeroEmpleado String  @unique\n  especialidad   String?\n  grado          String?\n  departamento   String?\n  activo         Boolean @default(true)\n\n  usuarioId String  @unique\n  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)\n\n  // Relaciones\n  grupos Grupo[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"profesores\")\n}\n\nmodel Administrador {\n  id             String  @id @default(uuid())\n  numeroEmpleado String  @unique\n  area           String?\n  cargo          String?\n  activo         Boolean @default(true)\n\n  usuarioId String  @unique\n  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"administradores\")\n}\n\n// ==========================================\n// MODELOS DE GESTIÓN DOCUMENTAL\n// ==========================================\n\nmodel Documento {\n  id                 String           @id @default(uuid())\n  folio              String           @unique\n  tipo               TipoDocumento\n  titulo             String\n  descripcion        String?\n  rutaArchivo        String\n  rutaArchivoFirmado String?\n  hashArchivo        String\n  tamanoBytes        Int\n  mimeType           String\n  estatus            EstatusDocumento @default(PENDIENTE)\n  fechaEmision       DateTime?\n  fechaVencimiento   DateTime?\n  validado           Boolean          @default(false)\n  firmado            Boolean          @default(false)\n  cadenaBlockchain   String?\n  qrCode             String?\n\n  creadoPorId String\n  creadoPor   Usuario @relation(\"DocumentoCreador\", fields: [creadoPorId], references: [id])\n\n  // Relaciones\n  documentosEstudiante DocumentoEstudiante[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"documentos\")\n}\n\nenum TipoDocumento {\n  KARDEX\n  FICHA_REINSCRIPCION\n  COMPROBANTE_PAGO\n}\n\nenum EstatusDocumento {\n  PENDIENTE\n  EN_REVISION\n  APROBADO\n  RECHAZADO\n  VENCIDO\n  ANULADO\n}\n\nmodel DocumentoEstudiante {\n  id                   String    @id @default(uuid())\n  observaciones        String?\n  motivoRechazo        String?\n  revisadoPor          String?\n  fechaRevision        DateTime?\n  escaneoVirus         Boolean   @default(false)\n  virusDetectado       Boolean   @default(false)\n  nombreVirusDetectado String?\n\n  documentoId String\n  documento   Documento @relation(fields: [documentoId], references: [id], onDelete: Cascade)\n\n  estudianteId String\n  estudiante   Estudiante @relation(fields: [estudianteId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n\n  @@unique([documentoId, estudianteId])\n  @@map(\"documentos_estudiante\")\n}\n\n// ==========================================\n// MODELOS DE NOTIFICACIONES\n// ==========================================\n\nmodel Notificacion {\n  id          String           @id @default(uuid())\n  tipo        TipoNotificacion\n  titulo      String\n  mensaje     String\n  leida       Boolean          @default(false)\n  documentoId String?\n\n  estudianteId String\n  estudiante   Estudiante @relation(fields: [estudianteId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n\n  @@map(\"notificaciones\")\n}\n\nenum TipoNotificacion {\n  DOCUMENTO_APROBADO\n  DOCUMENTO_RECHAZADO\n  DOCUMENTO_PENDIENTE\n  GENERAL\n}\n\n// ==========================================\n// MODELOS DE AUDITORÍA\n// ==========================================\n\nmodel ActividadUsuario {\n  id          String  @id @default(uuid())\n  accion      String\n  entidad     String?\n  entidadId   String?\n  descripcion String?\n  ipAddress   String?\n  userAgent   String?\n\n  usuarioId String\n  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n\n  @@map(\"actividades_usuario\")\n}\n",
  "inlineSchemaHash": "654c8f4bf2c1f166ce47f9542e7879b7db9be7401294dcd3dbbd43a5015fb097",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellidoPaterno\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellidoMaterno\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rol\",\"kind\":\"enum\",\"type\":\"Rol\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerificado\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"primerLogin\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"intentosFallidos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bloqueadoHasta\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ultimoAcceso\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estudiante\",\"kind\":\"object\",\"type\":\"Estudiante\",\"relationName\":\"EstudianteToUsuario\"},{\"name\":\"profesor\",\"kind\":\"object\",\"type\":\"Profesor\",\"relationName\":\"ProfesorToUsuario\"},{\"name\":\"administrador\",\"kind\":\"object\",\"type\":\"Administrador\",\"relationName\":\"AdministradorToUsuario\"},{\"name\":\"tokens\",\"kind\":\"object\",\"type\":\"TokenSesion\",\"relationName\":\"TokenSesionToUsuario\"},{\"name\":\"actividades\",\"kind\":\"object\",\"type\":\"ActividadUsuario\",\"relationName\":\"ActividadUsuarioToUsuario\"},{\"name\":\"documentosCreados\",\"kind\":\"object\",\"type\":\"Documento\",\"relationName\":\"DocumentoCreador\"}],\"dbName\":\"usuarios\"},\"TokenSesion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"TipoToken\"},{\"name\":\"expiraEn\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revocado\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"TokenSesionToUsuario\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"tokens_sesion\"},\"Estudiante\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"matricula\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"curp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nss\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ciudad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codigoPostal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tutorNombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tutorTelefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tutorEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estatus\",\"kind\":\"enum\",\"type\":\"EstatusEstudiante\"},{\"name\":\"fechaIngreso\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaEgreso\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"EstudianteToUsuario\"},{\"name\":\"carreraId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrera\",\"kind\":\"object\",\"type\":\"Carrera\",\"relationName\":\"CarreraToEstudiante\"},{\"name\":\"inscripciones\",\"kind\":\"object\",\"type\":\"Inscripcion\",\"relationName\":\"EstudianteToInscripcion\"},{\"name\":\"calificaciones\",\"kind\":\"object\",\"type\":\"Calificacion\",\"relationName\":\"CalificacionToEstudiante\"},{\"name\":\"documentos\",\"kind\":\"object\",\"type\":\"DocumentoEstudiante\",\"relationName\":\"DocumentoEstudianteToEstudiante\"},{\"name\":\"notificaciones\",\"kind\":\"object\",\"type\":\"Notificacion\",\"relationName\":\"EstudianteToNotificacion\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"estudiantes\"},\"Carrera\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clave\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duracionSemestres\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"creditos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"modalidad\",\"kind\":\"enum\",\"type\":\"Modalidad\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"estudiantes\",\"kind\":\"object\",\"type\":\"Estudiante\",\"relationName\":\"CarreraToEstudiante\"},{\"name\":\"materias\",\"kind\":\"object\",\"type\":\"Materia\",\"relationName\":\"CarreraToMateria\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"carreras\"},\"Materia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clave\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creditos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"semestre\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"horasTeoria\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"horasPractica\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"carreraId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrera\",\"kind\":\"object\",\"type\":\"Carrera\",\"relationName\":\"CarreraToMateria\"},{\"name\":\"grupos\",\"kind\":\"object\",\"type\":\"Grupo\",\"relationName\":\"GrupoToMateria\"},{\"name\":\"calificaciones\",\"kind\":\"object\",\"type\":\"Calificacion\",\"relationName\":\"CalificacionToMateria\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"materias\"},\"Grupo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clave\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cupoMaximo\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cupoDisponible\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"horario\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aula\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"materiaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"materia\",\"kind\":\"object\",\"type\":\"Materia\",\"relationName\":\"GrupoToMateria\"},{\"name\":\"profesorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profesor\",\"kind\":\"object\",\"type\":\"Profesor\",\"relationName\":\"GrupoToProfesor\"},{\"name\":\"inscripciones\",\"kind\":\"object\",\"type\":\"Inscripcion\",\"relationName\":\"GrupoToInscripcion\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"grupos\"},\"Inscripcion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estatus\",\"kind\":\"enum\",\"type\":\"EstatusInscripcion\"},{\"name\":\"fechaInscripcion\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estudianteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estudiante\",\"kind\":\"object\",\"type\":\"Estudiante\",\"relationName\":\"EstudianteToInscripcion\"},{\"name\":\"grupoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grupo\",\"kind\":\"object\",\"type\":\"Grupo\",\"relationName\":\"GrupoToInscripcion\"},{\"name\":\"calificacion\",\"kind\":\"object\",\"type\":\"Calificacion\",\"relationName\":\"CalificacionToInscripcion\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"inscripciones\"},\"Calificacion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"calificacion\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"estatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observaciones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estudianteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estudiante\",\"kind\":\"object\",\"type\":\"Estudiante\",\"relationName\":\"CalificacionToEstudiante\"},{\"name\":\"materiaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"materia\",\"kind\":\"object\",\"type\":\"Materia\",\"relationName\":\"CalificacionToMateria\"},{\"name\":\"inscripcionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inscripcion\",\"kind\":\"object\",\"type\":\"Inscripcion\",\"relationName\":\"CalificacionToInscripcion\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"calificaciones\"},\"Profesor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numeroEmpleado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"especialidad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departamento\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"ProfesorToUsuario\"},{\"name\":\"grupos\",\"kind\":\"object\",\"type\":\"Grupo\",\"relationName\":\"GrupoToProfesor\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"profesores\"},\"Administrador\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numeroEmpleado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"area\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cargo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"activo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"AdministradorToUsuario\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"administradores\"},\"Documento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"folio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"TipoDocumento\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rutaArchivo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rutaArchivoFirmado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hashArchivo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tamanoBytes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mimeType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estatus\",\"kind\":\"enum\",\"type\":\"EstatusDocumento\"},{\"name\":\"fechaEmision\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaVencimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"validado\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"firmado\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cadenaBlockchain\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qrCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creadoPorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creadoPor\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"DocumentoCreador\"},{\"name\":\"documentosEstudiante\",\"kind\":\"object\",\"type\":\"DocumentoEstudiante\",\"relationName\":\"DocumentoToDocumentoEstudiante\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"documentos\"},\"DocumentoEstudiante\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"observaciones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"motivoRechazo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revisadoPor\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaRevision\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"escaneoVirus\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"virusDetectado\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"nombreVirusDetectado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documento\",\"kind\":\"object\",\"type\":\"Documento\",\"relationName\":\"DocumentoToDocumentoEstudiante\"},{\"name\":\"estudianteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estudiante\",\"kind\":\"object\",\"type\":\"Estudiante\",\"relationName\":\"DocumentoEstudianteToEstudiante\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"documentos_estudiante\"},\"Notificacion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tipo\",\"kind\":\"enum\",\"type\":\"TipoNotificacion\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mensaje\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leida\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"documentoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estudianteId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estudiante\",\"kind\":\"object\",\"type\":\"Estudiante\",\"relationName\":\"EstudianteToNotificacion\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"notificaciones\"},\"ActividadUsuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entidad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entidadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarioId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuario\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"ActividadUsuarioToUsuario\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"actividades_usuario\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

