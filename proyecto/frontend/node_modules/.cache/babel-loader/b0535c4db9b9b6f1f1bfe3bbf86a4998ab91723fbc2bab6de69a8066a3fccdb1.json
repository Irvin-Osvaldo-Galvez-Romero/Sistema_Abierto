{"ast":null,"code":"/**\r\n * Servicio API\r\n * Configuración de Axios para comunicación con el backend\r\n */\n\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\n// Crear instancia de Axios\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 10000 // 10 segundos\n});\n\n// Interceptor de request - agregar token de autenticación\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('accessToken');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Interceptor de response - manejar errores y renovar token\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // Si el error es 401 y no hemos intentado renovar el token\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        throw new Error('No refresh token');\n      }\n\n      // Intentar renovar el token\n      const response = await axios.post(`${API_URL}/auth/refresh`, {\n        refreshToken\n      });\n      const {\n        accessToken\n      } = response.data.data;\n\n      // Guardar nuevo token\n      localStorage.setItem('accessToken', accessToken);\n\n      // Reintentar request original\n      if (originalRequest.headers) {\n        originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n      }\n      return api(originalRequest);\n    } catch (refreshError) {\n      // Si falla la renovación, limpiar storage y redirigir a login\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","refreshToken","Error","post","accessToken","data","setItem","refreshError","removeItem","window","location","href"],"sources":["C:/Users/User/Documents/GitHub/Sistema_Abierto/proyecto/frontend/src/services/api.service.ts"],"sourcesContent":["/**\r\n * Servicio API\r\n * Configuración de Axios para comunicación con el backend\r\n */\r\n\r\nimport axios, { AxiosInstance, AxiosError, InternalAxiosRequestConfig } from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// Crear instancia de Axios\r\nconst api: AxiosInstance = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  timeout: 10000, // 10 segundos\r\n});\r\n\r\n// Interceptor de request - agregar token de autenticación\r\napi.interceptors.request.use(\r\n  (config: InternalAxiosRequestConfig) => {\r\n    const token = localStorage.getItem('accessToken');\r\n    \r\n    if (token && config.headers) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Interceptor de response - manejar errores y renovar token\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error: AxiosError) => {\r\n    const originalRequest = error.config as InternalAxiosRequestConfig & { _retry?: boolean };\r\n\r\n    // Si el error es 401 y no hemos intentado renovar el token\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refreshToken');\r\n        \r\n        if (!refreshToken) {\r\n          throw new Error('No refresh token');\r\n        }\r\n\r\n        // Intentar renovar el token\r\n        const response = await axios.post(`${API_URL}/auth/refresh`, {\r\n          refreshToken,\r\n        });\r\n\r\n        const { accessToken } = response.data.data;\r\n        \r\n        // Guardar nuevo token\r\n        localStorage.setItem('accessToken', accessToken);\r\n\r\n        // Reintentar request original\r\n        if (originalRequest.headers) {\r\n          originalRequest.headers.Authorization = `Bearer ${accessToken}`;\r\n        }\r\n        \r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // Si falla la renovación, limpiar storage y redirigir a login\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        window.location.href = '/login';\r\n        return Promise.reject(refreshError);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAiE,OAAO;AAEpF,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;;AAE5E;AACA,MAAMC,GAAkB,GAAGL,KAAK,CAACM,MAAM,CAAC;EACtCC,OAAO,EAAEN,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAkC,IAAK;EACtC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAEjD,IAAIF,KAAK,IAAID,MAAM,CAACL,OAAO,EAAE;IAC3BK,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EAEA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAiB,IAAK;EAAA,IAAAI,eAAA;EAC3B,MAAMC,eAAe,GAAGL,KAAK,CAACL,MAA2D;;EAEzF;EACA,IAAI,EAAAS,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,CAACD,eAAe,CAACE,MAAM,EAAE;IAC7DF,eAAe,CAACE,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMC,YAAY,GAAGX,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAEzD,IAAI,CAACU,YAAY,EAAE;QACjB,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MACrC;;MAEA;MACA,MAAMN,QAAQ,GAAG,MAAMrB,KAAK,CAAC4B,IAAI,CAAC,GAAG3B,OAAO,eAAe,EAAE;QAC3DyB;MACF,CAAC,CAAC;MAEF,MAAM;QAAEG;MAAY,CAAC,GAAGR,QAAQ,CAACS,IAAI,CAACA,IAAI;;MAE1C;MACAf,YAAY,CAACgB,OAAO,CAAC,aAAa,EAAEF,WAAW,CAAC;;MAEhD;MACA,IAAIN,eAAe,CAACf,OAAO,EAAE;QAC3Be,eAAe,CAACf,OAAO,CAACS,aAAa,GAAG,UAAUY,WAAW,EAAE;MACjE;MAEA,OAAOxB,GAAG,CAACkB,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOS,YAAY,EAAE;MACrB;MACAjB,YAAY,CAACkB,UAAU,CAAC,aAAa,CAAC;MACtClB,YAAY,CAACkB,UAAU,CAAC,cAAc,CAAC;MACvCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOjB,OAAO,CAACC,MAAM,CAACY,YAAY,CAAC;IACrC;EACF;EAEA,OAAOb,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}