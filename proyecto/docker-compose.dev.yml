version: '3.8'

# ==========================================
# Docker Compose para Desarrollo Local
# Sistema Universitario
# ==========================================

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:18-alpine
    container_name: univ_postgres_dev
    environment:
      POSTGRES_DB: sistema_universitario
      POSTGRES_USER: univ_app
      POSTGRES_PASSWORD: univ_app_password_2024
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - univ_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U univ_app"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cach√© y sesiones
  redis:
    image: redis:7-alpine
    container_name: univ_redis_dev
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - univ_network_dev
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin para administrar PostgreSQL
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: univ_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@universidad.edu.mx
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - univ_network_dev
    restart: unless-stopped
    depends_on:
      - postgres

  # Redis Commander para administrar Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: univ_redis_commander_dev
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - univ_network_dev
    restart: unless-stopped
    depends_on:
      - redis

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  univ_network_dev:
    driver: bridge

