/**
 * Script para verificar configuraci√≥n de Gmail
 */

import nodemailer from 'nodemailer';

async function verificarConfiguracionGmail() {
  console.log('üîç VERIFICANDO CONFIGURACI√ìN DE GMAIL');
  console.log('=' .repeat(50));
  
  try {
    // Crear transporter con configuraci√≥n del .env
    const transporter = nodemailer.createTransport({
      host: process.env.SMTP_HOST || 'smtp.gmail.com',
      port: parseInt(process.env.SMTP_PORT || '587'),
      secure: false,
      auth: {
        user: process.env.SMTP_USER,
        pass: process.env.SMTP_PASSWORD,
      },
    });

    console.log('\nüìß Configuraci√≥n actual:');
    console.log('   SMTP_HOST:', process.env.SMTP_HOST || 'No configurado');
    console.log('   SMTP_PORT:', process.env.SMTP_PORT || 'No configurado');
    console.log('   SMTP_USER:', process.env.SMTP_USER || 'No configurado');
    console.log('   SMTP_PASSWORD:', process.env.SMTP_PASSWORD ? 'Configurado' : 'No configurado');
    console.log('   FRONTEND_URL:', process.env.FRONTEND_URL || 'No configurado');

    console.log('\nüîå Verificando conexi√≥n SMTP...');
    
    // Verificar conexi√≥n
    await transporter.verify();
    
    console.log('‚úÖ ¬°CONEXI√ìN EXITOSA!');
    console.log('   El servidor SMTP est√° funcionando correctamente');
    console.log('   chatgptpremiumopen@gmail.com est√° configurado');
    
    console.log('\nüìß Probando env√≠o de correo de prueba...');
    
    // Enviar correo de prueba
    const info = await transporter.sendMail({
      from: `"TESCHI - Sistema de Gesti√≥n Documental" <${process.env.SMTP_USER}>`,
      to: process.env.SMTP_USER, // Enviar a s√≠ mismo para prueba
      subject: 'üß™ Prueba de Configuraci√≥n - Sistema TESCHI',
      html: `
        <h2>‚úÖ Configuraci√≥n Exitosa</h2>
        <p>El sistema de correo est√° funcionando correctamente.</p>
        <p><strong>Correo configurado:</strong> ${process.env.SMTP_USER}</p>
        <p><strong>Fecha:</strong> ${new Date().toLocaleString()}</p>
        <hr>
        <p><em>Sistema Universitario de Gesti√≥n Documental Digital</em></p>
      `,
    });

    console.log('‚úÖ ¬°CORREO ENVIADO EXITOSAMENTE!');
    console.log('   Message ID:', info.messageId);
    console.log('   Revisa tu bandeja de entrada en:', process.env.SMTP_USER);
    
    console.log('\nüéâ CONFIGURACI√ìN COMPLETA');
    console.log('   ‚Ä¢ Gmail configurado correctamente');
    console.log('   ‚Ä¢ Conexi√≥n SMTP verificada');
    console.log('   ‚Ä¢ Env√≠o de correo funcionando');
    
    console.log('\nüöÄ PR√ìXIMOS PASOS:');
    console.log('   1. Reinicia el servidor: npm run dev');
    console.log('   2. Ve a: http://localhost:3000/forgot-password');
    console.log('   3. Prueba con cualquier email');
    console.log('   4. Deber√≠as recibir el correo de restablecimiento');

  } catch (error: any) {
    console.error('\n‚ùå ERROR EN LA CONFIGURACI√ìN:');
    console.error('   Mensaje:', error.message);
    
    if (error.code === 'EAUTH') {
      console.error('\nüîß SOLUCI√ìN:');
      console.error('   1. Verifica que SMTP_USER=chatgptpremiumopen@gmail.com');
      console.error('   2. Verifica que SMTP_PASSWORD sea la contrase√±a de aplicaci√≥n');
      console.error('   3. Aseg√∫rate de que la verificaci√≥n en 2 pasos est√© activada');
      console.error('   4. Genera una nueva contrase√±a de aplicaci√≥n si es necesario');
    } else if (error.code === 'ECONNECTION') {
      console.error('\nüîß SOLUCI√ìN:');
      console.error('   1. Verifica tu conexi√≥n a internet');
      console.error('   2. Verifica que SMTP_HOST=smtp.gmail.com');
      console.error('   3. Verifica que SMTP_PORT=587');
    }
    
    console.error('\nüìã REVISAR ARCHIVO .env:');
    console.error('   ‚Ä¢ SMTP_USER=chatgptpremiumopen@gmail.com');
    console.error('   ‚Ä¢ SMTP_PASSWORD=contrase√±a_de_16_caracteres_sin_espacios');
  }
}

verificarConfiguracionGmail();
